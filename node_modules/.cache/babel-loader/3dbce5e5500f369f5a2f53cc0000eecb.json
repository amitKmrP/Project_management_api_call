{"ast":null,"code":"var _jsxFileName = \"/home/amit/Desktop/experiment/ProjectManager2/src/components/LoginPage/LoginPage.js\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport { Box, Input } from \"@chakra-ui/react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from \"@chakra-ui/react\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport { IoLogoLinkedin } from \"react-icons/io\";\nimport { Center, Flex, Text } from \"@chakra-ui/layout\";\nimport SideMenu from \"../SettingPage/SideMenu\";\nimport General from \"../SettingPage/General\";\nimport { AuthorizedApp } from \"../SettingPage/Subscription\";\nimport Subscription from \"../SettingPage/Subscription\";\nimport Bascis from \"../SettingPage/Basics\";\nimport ReminderForm from \"../SettingPage/ReminderForm\";\nimport EmailNotification from \"../SettingPage/EmailNotification\";\nimport ProjectPreference from \"../SettingPage/ProjectPreference\";\nimport { Advanced } from \"../SettingPage/ProjectPreference\";\nimport Head from \"../../Head\";\nimport UserDashBoard from \"../UserDashBoard/UserDashBoard\"; // eslint-disable-next-line\n\nimport { FormControl, FormLabel, FormErrorMessage, FormHelperText } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst googleOAuth = require('../../utils/googleOAuth');\n\nconst Axios = require('axios');\n\nlet name;\nconst data = {\n  \"password\": \"Amit*paswan1\",\n  \"email\": \"amit123@gmail.com\",\n  \"name\": \"amit\"\n};\nconst headers = {\n  'Content-Type': 'application/json',\n  'Authorization': process.env.GOOGLE_CLIENT_SECRET\n};\nlet loginSuccess = false; // export default function LoginPage() {\n//   const token = localStorage.getItem(\"token\")\n//   const [isLoggedIn, setIsLoggedIn] = useState(false)\n//     if (token && isLoggedIn === false) {\n//       setIsLoggedIn(true)\n//     }\n//   // const [userDetails, setUserDetail] = useState(\"paswan\")\n//   let usrData\n//   async function toggleLogin(){\n//     const email = document.getElementById('emailId').value\n//     const password = document.getElementById('passwordId').value\n//      usrData = {\n//       \"password\":password,\n//       \"email\" : email\n//     }\n//     let status\n//     let statusText\n//     const tokens = await Axios.post(\"http://localhost:8000/users/login\", usrData, {headers: headers})\n//     localStorage.setItem(\"token\", tokens)\n//     if (tokens && isLoggedIn === false) {\n//       setIsLoggedIn(true)\n//     }\n//   }\n//   if(isLoggedIn === false){\n//   return (\n//     <Box\n//       className=\"login-container\"\n//       bg=\"#eaeaec\"\n//       w=\"100%\"\n//       h=\"100vh\"\n//       p={4}\n//       color=\"black\"\n//     >\n//       <Tabs variant=\"unstyled\" align=\"center\" className=\"navigation-container\">\n//         <div>Logo</div>\n//         <TabList mb=\"40px\" m=\"40px\">\n//           <Tab>Login</Tab>\n//           <Tab>Signup</Tab>\n//         </TabList>\n//         <TabPanels>\n//           <TabPanel>\n//             <FormControl id=\"email\">\n//               <FormLabel>Email address</FormLabel>\n//               <Input type=\"email\" id=\"emailId\"  />\n//               <FormLabel>Password</FormLabel>\n//               <Input type=\"password\" id=\"passwordId\" />\n//               <FormHelperText>We'll never share your email.</FormHelperText>\n//             </FormControl>\n//             <div>\n//               <Button\n//               onClick = {toggleLogin}\n//                 w=\"100%\"\n//                 my=\"5px\"\n//                 pr=\"60px\"\n//                 pl=\"60px\"\n//                 colorScheme=\"teal\"\n//                 size=\"lg\"\n//                 bg=\"black\"\n//               >\n//                 Login\n//               </Button>\n//             </div>\n//             <div>\n//               <Button\n//                 leftIcon={<FcGoogle />}\n//                 w=\"100%\"\n//                 my=\"5px\"\n//                 pr=\"60px\"\n//                 pl=\"60px\"\n//                 bg=\"alphaBlack\"\n//                 border=\"solid gray 1px\"\n//                 size=\"lg\"\n//                 fontWeight=\"light\"\n//                 borderRadius=\"8px\"\n//               >\n//                 Signin with Google\n//               </Button>\n//             </div>\n//             <div>\n//               <Button\n//                 leftIcon={<IoLogoLinkedin />}\n//                 w=\"100%\"\n//                 my=\"5px\"\n//                 pr=\"60px\"\n//                 pl=\"60px\"\n//                 bg=\"alphaBlack\"\n//                 border=\"solid gray 1px\"\n//                 size=\"lg\"\n//                 mb=\"20px\"\n//                 fontWeight=\"light\"\n//                 borderRadius=\"8px\"\n//               >\n//                 Sign in with Linkedin\n//               </Button>\n//             </div>\n//             <div style={{ color: \"gray\" }}>\n//               Forgot password?{\" \"}\n//               <strong style={{ color: \"black\" }}>click here</strong>\n//             </div>\n//           </TabPanel>\n//           <TabPanel>\n//             <div>\n//             <FormControl id=\"email\">\n//               <FormLabel>Email address</FormLabel>\n//               <Input type=\"email\" />\n//               <FormHelperText>We'll never share your email.</FormHelperText>\n//             </FormControl>\n//             </div>\n//             <Button\n//               w=\"100%\"\n//               my=\"5px\"\n//               pr=\"60px\"\n//               pl=\"60px\"\n//               colorScheme=\"white\"\n//               size=\"lg\"\n//               bg=\"black\"\n//               borderRadius=\"8px\"\n//             >\n//               Next\n//             </Button>\n//             <div style={{ margin: \"5px\", color: \"gray\" }}>or</div>\n//             <div>\n//               <Button\n//                 leftIcon={<FcGoogle />}\n//                 w=\"100%\"\n//                 my=\"5px\"\n//                 pr=\"60px\"\n//                 pl=\"60px\"\n//                 bg=\"alphaBlack\"\n//                 border=\"solid gray 1px\"\n//                 size=\"lg\"\n//                 fontWeight=\"light\"\n//                 borderRadius=\"8px\"\n//               >\n//                 Signin with Google\n//               </Button>\n//             </div>\n//             <div>\n//               <Button\n//                 leftIcon={<IoLogoLinkedin />}\n//                 w=\"100%\"\n//                 my=\"5px\"\n//                 pr=\"60px\"\n//                 pl=\"60px\"\n//                 bg=\"alphaBlack\"\n//                 border=\"solid gray 1px\"\n//                 size=\"lg\"\n//                 mb=\"20px\"\n//                 fontWeight=\"light\"\n//                 borderRadius=\"8px\"\n//               >\n//                 Sign in with Linkedin\n//               </Button>\n//             </div>\n//             <div style={{ color: \"gray\" }}>\n//               Already have an account?{\" \"}\n//               <strong style={{ color: \"black\" }}>Log in here</strong>\n//             </div>\n//           </TabPanel>\n//         </TabPanels>\n//       </Tabs>\n//     </Box>\n//   );\n//   }else {\n//     return (\n//       <UserDashBoard />\n//     );\n//   }\n// }\n\nexport default class LoginPage extends React.Component {\n  constructor() {\n    super();\n    let loggedIn = false;\n    let tokenVal = \"\";\n    const token = localStorage.getItem(\"token\");\n    const name = localStorage.getItem(\"name\");\n    console.log(\"====0000====\");\n    console.log(name);\n    if (token) loggedIn = true;\n\n    if (token) {\n      tokenVal = name;\n    }\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loggedIn,\n      error: \"\",\n      tokenVal\n    };\n    this.onChange = this.onChange.bind(this);\n    this.formSubmit = this.formSubmit.bind(this);\n  }\n\n  onChange(ev) {\n    this.setState({\n      [ev.target.name]: ev.target.value\n    });\n  }\n\n  async formSubmit(ev) {\n    ev.preventDefault();\n    const {\n      username,\n      password\n    } = this.state;\n    console.log(username);\n    const usrData = {\n      \"password\": password,\n      \"email\": username\n    };\n\n    try {\n      this.token = await Axios.post(\"http://localhost:8000/users/login\", usrData, {\n        headers: headers\n      });\n      localStorage.setItem(\"token\", this.token);\n      localStorage.setItem(\"name\", this.token.data.user.name);\n      console.log(this.token.data.user.name);\n      this.setState({\n        loggedIn: true,\n        tokenVal: this.token.data.user.name\n      });\n    } catch (err) {\n      this.setState({\n        error: err.message\n      });\n    }\n  }\n\n  render() {\n    if (this.state.loggedIn === true) {\n      return /*#__PURE__*/_jsxDEV(UserDashBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.formSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"username\",\n        value: this.state.username,\n        onChange: this.onChange,\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: this.state.password,\n        onChange: this.onChange,\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }, this), this.state.error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/amit/Desktop/experiment/ProjectManager2/src/components/LoginPage/LoginPage.js"],"names":["BrowserRouter","Router","Route","Redirect","Switch","React","useState","Box","Input","Button","Tabs","TabList","TabPanels","Tab","TabPanel","FcGoogle","IoLogoLinkedin","Center","Flex","Text","SideMenu","General","AuthorizedApp","Subscription","Bascis","ReminderForm","EmailNotification","ProjectPreference","Advanced","Head","UserDashBoard","FormControl","FormLabel","FormErrorMessage","FormHelperText","googleOAuth","require","Axios","name","data","headers","process","env","GOOGLE_CLIENT_SECRET","loginSuccess","LoginPage","Component","constructor","loggedIn","tokenVal","token","localStorage","getItem","console","log","state","username","password","error","onChange","bind","formSubmit","ev","setState","target","value","preventDefault","usrData","post","setItem","user","err","message","render"],"mappings":";AAAA,SACEA,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,QAHF,EAIEC,MAJF,QAKO,kBALP;AAMA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,iBAAP;AACA,SAASC,GAAT,EAAcC,KAAd,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,SAAxB,EAAmCC,GAAnC,EAAwCC,QAAxC,QAAwD,kBAAxD;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAmC,mBAAnC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,aAAP,MAA0B,gCAA1B,C,CACA;;AACA,SAAUC,WAAV,EAAwBC,SAAxB,EAAoCC,gBAApC,EAAuDC,cAAvD,QAA6E,kBAA7E;;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,yBAAD,CAA3B;;AAEA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIE,IAAJ;AAEA,MAAMC,IAAI,GAAG;AACX,cAAW,cADA;AAEX,WAAU,mBAFC;AAGX,UAAO;AAHI,CAAb;AAKA,MAAMC,OAAO,GAAG;AACd,kBAAgB,kBADF;AAEd,mBAAiBC,OAAO,CAACC,GAAR,CAAYC;AAFf,CAAhB;AAIA,IAAIC,YAAY,GAAG,KAAneAAe,MAAMC,SAAN,SAAwBxC,KAAK,CAACyC,SAA9B,CAAuC;AAEpDC,EAAAA,WAAW,GAAE;AACT;AACA,QAAIC,QAAQ,GAAG,KAAf;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMd,IAAI,GAAGa,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACA,QAAGY,KAAH,EAAUF,QAAQ,GAAG,IAAX;;AACR,QAAIE,KAAJ,EAAU;AACND,MAAAA,QAAQ,GAAGX,IAAX;AACH;;AACH,SAAKiB,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTT,MAAAA,QAHS;AAITU,MAAAA,KAAK,EAAE,EAJE;AAKTT,MAAAA;AALS,KAAb;AAOA,SAAKU,QAAL,GAAiB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAjB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAGDD,EAAAA,QAAQ,CAACG,EAAD,EAAI;AACR,SAAKC,QAAL,CAAc;AACV,OAACD,EAAE,CAACE,MAAH,CAAU1B,IAAX,GAAkBwB,EAAE,CAACE,MAAH,CAAUC;AADlB,KAAd;AAGH;;AAEe,QAAVJ,UAAU,CAACC,EAAD,EAAI;AAChBA,IAAAA,EAAE,CAACI,cAAH;AACA,UAAM;AAACV,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAAuB,KAAKF,KAAlC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACH,UAAOW,OAAO,GAAG;AACd,kBAAWV,QADG;AAEd,eAAUD;AAFI,KAAjB;;AAIG,QAAI;AACA,WAAKN,KAAL,GAAa,MAAMb,KAAK,CAAC+B,IAAN,CAAW,mCAAX,EAAgDD,OAAhD,EAAyD;AAAC3B,QAAAA,OAAO,EAAEA;AAAV,OAAzD,CAAnB;AACAW,MAAAA,YAAY,CAACkB,OAAb,CAAqB,OAArB,EAA8B,KAAKnB,KAAnC;AACAC,MAAAA,YAAY,CAACkB,OAAb,CAAqB,MAArB,EAA6B,KAAKnB,KAAL,CAAWX,IAAX,CAAgB+B,IAAhB,CAAqBhC,IAAlD;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWX,IAAX,CAAgB+B,IAAhB,CAAqBhC,IAAjC;AAEA,WAAKyB,QAAL,CAAc;AACZf,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWX,IAAX,CAAgB+B,IAAhB,CAAqBhC;AAFnB,OAAd;AAIH,KAVD,CAUE,OAAOiC,GAAP,EAAY;AACV,WAAKR,QAAL,CAAc;AACVL,QAAAA,KAAK,EAAEa,GAAG,CAACC;AADD,OAAd;AAGH;AACJ;;AAEDC,EAAAA,MAAM,GACN;AACI,QAAG,KAAKlB,KAAL,CAAWP,QAAX,KAAwB,IAA3B,EAAgC;AAC5B,0BAAS,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAAT;AACH;;AACD,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKa,UAArB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,WAAW,EAAC,UAAhC;AAA2C,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,QAA7D;AAAuE,QAAA,QAAQ,EAAE,KAAKG,QAAtF;AAAgG,QAAA,IAAI,EAAC;AAArG;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,WAAW,EAAC,UAAnC;AAA8C,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,QAAhE;AAA0E,QAAA,QAAQ,EAAE,KAAKE,QAAzF;AAAmG,QAAA,IAAI,EAAC;AAAxG;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIK,KAAKJ,KAAL,CAAWG,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAvEmD","sourcesContent":["import {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport React,{useState} from \"react\";\nimport \"./LoginPage.css\";\nimport { Box, Input } from \"@chakra-ui/react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from \"@chakra-ui/react\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport { IoLogoLinkedin } from \"react-icons/io\";\nimport { Center, Flex, Text } from \"@chakra-ui/layout\";\nimport SideMenu from \"../SettingPage/SideMenu\";\nimport General from \"../SettingPage/General\";\nimport { AuthorizedApp } from \"../SettingPage/Subscription\";\nimport Subscription from \"../SettingPage/Subscription\";\nimport Bascis from \"../SettingPage/Basics\";\nimport ReminderForm from \"../SettingPage/ReminderForm\";\nimport EmailNotification from \"../SettingPage/EmailNotification\";\nimport ProjectPreference from \"../SettingPage/ProjectPreference\";\nimport { Advanced } from \"../SettingPage/ProjectPreference\";\nimport Head from \"../../Head\";\nimport UserDashBoard from \"../UserDashBoard/UserDashBoard\"\n// eslint-disable-next-line\nimport {  FormControl,  FormLabel,  FormErrorMessage,  FormHelperText,} from \"@chakra-ui/react\";\nconst googleOAuth = require('../../utils/googleOAuth');\n\nconst Axios = require('axios');\nlet name\n\nconst data = {\n  \"password\":\"Amit*paswan1\",\n  \"email\" : \"amit123@gmail.com\",\n  \"name\":\"amit\"\n}\nconst headers = {\n  'Content-Type': 'application/json',\n  'Authorization': process.env.GOOGLE_CLIENT_SECRET\n}\nlet loginSuccess = false\n// export default function LoginPage() {\n//   const token = localStorage.getItem(\"token\")\n//   const [isLoggedIn, setIsLoggedIn] = useState(false)\n//     if (token && isLoggedIn === false) {\n//       setIsLoggedIn(true)\n//     }\n//   // const [userDetails, setUserDetail] = useState(\"paswan\")\n//   let usrData\n//   async function toggleLogin(){\n//     const email = document.getElementById('emailId').value\n//     const password = document.getElementById('passwordId').value\n//      usrData = {\n//       \"password\":password,\n//       \"email\" : email\n//     }\n//     let status\n//     let statusText\n//     const tokens = await Axios.post(\"http://localhost:8000/users/login\", usrData, {headers: headers})\n//     localStorage.setItem(\"token\", tokens)\n//     if (tokens && isLoggedIn === false) {\n//       setIsLoggedIn(true)\n//     }\n//   }\n//   if(isLoggedIn === false){\n//   return (\n//     <Box\n//       className=\"login-container\"\n//       bg=\"#eaeaec\"\n//       w=\"100%\"\n//       h=\"100vh\"\n//       p={4}\n//       color=\"black\"\n//     >\n//       <Tabs variant=\"unstyled\" align=\"center\" className=\"navigation-container\">\n//         <div>Logo</div>\n//         <TabList mb=\"40px\" m=\"40px\">\n//           <Tab>Login</Tab>\n//           <Tab>Signup</Tab>\n//         </TabList>\n\n//         <TabPanels>\n//           <TabPanel>\n//             <FormControl id=\"email\">\n//               <FormLabel>Email address</FormLabel>\n//               <Input type=\"email\" id=\"emailId\"  />\n//               <FormLabel>Password</FormLabel>\n//               <Input type=\"password\" id=\"passwordId\" />\n//               <FormHelperText>We'll never share your email.</FormHelperText>\n//             </FormControl>\n//             <div>\n//               <Button\n//               onClick = {toggleLogin}\n//                 w=\"100%\"\n//                 my=\"5px\"\n//                 pr=\"60px\"\n//                 pl=\"60px\"\n//                 colorScheme=\"teal\"\n//                 size=\"lg\"\n//                 bg=\"black\"\n//               >\n//                 Login\n//               </Button>\n//             </div>\n//             <div>\n//               <Button\n//                 leftIcon={<FcGoogle />}\n//                 w=\"100%\"\n//                 my=\"5px\"\n//                 pr=\"60px\"\n//                 pl=\"60px\"\n//                 bg=\"alphaBlack\"\n//                 border=\"solid gray 1px\"\n//                 size=\"lg\"\n//                 fontWeight=\"light\"\n//                 borderRadius=\"8px\"\n//               >\n//                 Signin with Google\n//               </Button>\n//             </div>\n//             <div>\n//               <Button\n//                 leftIcon={<IoLogoLinkedin />}\n//                 w=\"100%\"\n//                 my=\"5px\"\n//                 pr=\"60px\"\n//                 pl=\"60px\"\n//                 bg=\"alphaBlack\"\n//                 border=\"solid gray 1px\"\n//                 size=\"lg\"\n//                 mb=\"20px\"\n//                 fontWeight=\"light\"\n//                 borderRadius=\"8px\"\n//               >\n//                 Sign in with Linkedin\n//               </Button>\n//             </div>\n//             <div style={{ color: \"gray\" }}>\n//               Forgot password?{\" \"}\n//               <strong style={{ color: \"black\" }}>click here</strong>\n//             </div>\n//           </TabPanel>\n\n//           <TabPanel>\n//             <div>\n//             <FormControl id=\"email\">\n//               <FormLabel>Email address</FormLabel>\n//               <Input type=\"email\" />\n//               <FormHelperText>We'll never share your email.</FormHelperText>\n//             </FormControl>\n//             </div>\n\n//             <Button\n//               w=\"100%\"\n//               my=\"5px\"\n//               pr=\"60px\"\n//               pl=\"60px\"\n//               colorScheme=\"white\"\n//               size=\"lg\"\n//               bg=\"black\"\n//               borderRadius=\"8px\"\n//             >\n//               Next\n//             </Button>\n//             <div style={{ margin: \"5px\", color: \"gray\" }}>or</div>\n//             <div>\n//               <Button\n//                 leftIcon={<FcGoogle />}\n//                 w=\"100%\"\n//                 my=\"5px\"\n//                 pr=\"60px\"\n//                 pl=\"60px\"\n//                 bg=\"alphaBlack\"\n//                 border=\"solid gray 1px\"\n//                 size=\"lg\"\n//                 fontWeight=\"light\"\n//                 borderRadius=\"8px\"\n//               >\n//                 Signin with Google\n//               </Button>\n//             </div>\n//             <div>\n//               <Button\n//                 leftIcon={<IoLogoLinkedin />}\n//                 w=\"100%\"\n//                 my=\"5px\"\n//                 pr=\"60px\"\n//                 pl=\"60px\"\n//                 bg=\"alphaBlack\"\n//                 border=\"solid gray 1px\"\n//                 size=\"lg\"\n//                 mb=\"20px\"\n//                 fontWeight=\"light\"\n//                 borderRadius=\"8px\"\n//               >\n//                 Sign in with Linkedin\n//               </Button>\n//             </div>\n//             <div style={{ color: \"gray\" }}>\n//               Already have an account?{\" \"}\n//               <strong style={{ color: \"black\" }}>Log in here</strong>\n//             </div>\n//           </TabPanel>\n//         </TabPanels>\n//       </Tabs>\n//     </Box>\n//   );\n//   }else {\n\n//     return (\n//       <UserDashBoard />\n//     );\n\n//   }\n// }\n\n\n\nexport default class LoginPage extends React.Component{\n\n  constructor(){\n      super()\n      let loggedIn = false\n      let tokenVal = \"\"\n      const token = localStorage.getItem(\"token\")\n      const name = localStorage.getItem(\"name\")\n      console.log(\"====0000====\")\n      console.log(name)\n      if(token) loggedIn = true\n        if (token){\n            tokenVal = name\n        }\n      this.state = {\n          username: \"\",\n          password: \"\",\n          loggedIn,\n          error: \"\",\n          tokenVal\n      }\n      this.onChange =  this.onChange.bind(this)\n      this.formSubmit = this.formSubmit.bind(this)\n  }\n\n\n  onChange(ev){\n      this.setState({\n          [ev.target.name]: ev.target.value\n      })\n  }\n\n  async formSubmit(ev){\n      ev.preventDefault()\n      const {username, password} = this.state\n      console.log(username)\n   const  usrData = {\n      \"password\":password,\n      \"email\" : username\n    }\n      try {\n          this.token = await Axios.post(\"http://localhost:8000/users/login\", usrData, {headers: headers})\n          localStorage.setItem(\"token\", this.token)\n          localStorage.setItem(\"name\", this.token.data.user.name)\n          console.log(this.token.data.user.name)\n\n          this.setState({\n            loggedIn: true,\n            tokenVal: this.token.data.user.name\n          })\n      } catch (err) {\n          this.setState({\n              error: err.message\n          })\n      }\n  }\n\n  render()\n  {\n      if(this.state.loggedIn === true){\n          return ( <UserDashBoard  /> );\n      }\n      return(\n          <form onSubmit={this.formSubmit}>\n              <input type=\"email\" placeholder=\"username\" value={this.state.username} onChange={this.onChange} name=\"username\" />\n              <input type=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.onChange} name=\"password\" />\n              <input type=\"submit\" />\n              {this.state.error}\n          </form>\n      );\n  \n  }\n}"]},"metadata":{},"sourceType":"module"}